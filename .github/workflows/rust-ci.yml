name: Rust CI (stable + nightly)

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      GH_PAT:
        required: true

jobs:
  stable-ci:
    name: Check with stable
    runs-on: ubuntu-latest
    env:
      CARGO_TARGET_DIR: target/stable
    steps:
      - uses: actions/checkout@v4

      - name: Git 認証設定
        run: git config --global url."https://${{ secrets.GH_PAT }}@github.com/".insteadOf "https://github.com/"

      - name: Cargo Fetch 対応
        run: |
          mkdir -p .cargo
          echo '[net]' >> .cargo/config.toml
          echo 'git-fetch-with-cli = true' >> .cargo/config.toml

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target/stable
          key: ${{ runner.os }}-cargo-stable-${{ hashFiles('**/Cargo.lock', 'ci-tool-versions.txt') }}
          restore-keys: |
            ${{ runner.os }}-cargo-stable-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt

      - name: Install cargo-binstall
        run: curl -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install cargo-audit via binstall
        run: cargo binstall cargo-audit --no-confirm --locked

      - name: Install typeshare-cli
        run: cargo bininstall typeshare-cli --locked

      - name: Format Check
        run: cargo fmt --check

      - name: Clippy Lint
        run: cargo clippy -- -D warnings

      - name: Doctest
        run: cargo test --doc

      - name: Debug Build
        run: cargo build

      - name: Unit Tests
        run: cargo test

      - name: Rustdoc
        run: cargo doc --no-deps

      - name: Security Audit
        run: cargo audit || (echo "❌ Vulnerabilities found!" && exit 1)

  nightly-ci:
    name: Extra tests with nightly
    runs-on: ubuntu-latest
    env:
      CARGO_TARGET_DIR: target/nightly
    steps:
      - uses: actions/checkout@v4

      - name: Git 認証設定
        run: git config --global url."https://${{ secrets.GH_PAT }}@github.com/".insteadOf "https://github.com/"

      - name: Cargo Fetch 対応
        run: |
          mkdir -p .cargo
          echo '[net]' >> .cargo/config.toml
          echo 'git-fetch-with-cli = true' >> .cargo/config.toml

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target/nightly
          key: ${{ runner.os }}-cargo-nightly-${{ hashFiles('**/Cargo.lock', 'ci-tool-versions.txt') }}
          restore-keys: |
            ${{ runner.os }}-cargo-nightly-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true

      - name: Install cargo-binstall
        run: curl -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install Tools via binstall
        run: |
          cargo binstall cargo-fuzz cargo-outdated cargo-udeps typeshare-cli --no-confirm --locked

      - name: Debug Build & Unit Tests
        run: cargo test

      - name: Fuzz Tests
        run: |
          if compgen -G "fuzz/fuzz_targets/*.rs" > /dev/null; then
            for target in fuzz/fuzz_targets/*.rs; do
              name=$(basename "$target" .rs)
              echo "Running fuzz target: $name"
              cargo fuzz run "$name" -- -max_total_time=10
            done
          else
            echo "No fuzz targets found."
          fi

      - name: Benchmarks
        run: cargo bench || (echo "❌ Benchmarks failed on CI" && exit 1)

      - name: Check for Outdated Dependencies
        run: |
          cargo outdated --exit-code 1 || (echo "❌ Dependencies are outdated!" && exit 1)

      - name: Unused Dependencies
        run: cargo udeps || (echo "❌ Unused dependencies detected!" && exit 1)
